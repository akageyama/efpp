================================================
  sample for efpp, ver.__EFPPVER__
================================================

program main
  use constants_m
  use time_m
  use vecfield_m
  implicit none

  type(time__t) :: time = time__t(0, 0.1_DR, 0.0_DR)
  logical :: just_once = .true.

  type(vecfield__t) :: magnetic
  real(DR) :: energy, dvol2 = GRID_DVOL/2

  !debugp dvol2
  !debugp "kind vals:", SI, DI, SR, DR

  magnetic.x(:,:,:) = 1.0_DR
  magnetic.y(:,:,:) = 0.0_DR
  magnetic.z(:,:,:) = 0.0_DR

  do while ( time.loop <= 10 )
    ==<just_once>==
      ! this part is called only once.
      call vecfield__init
    ==</just_once>==

    ==============
      Normalized magnetic energy
           = \int_V \frac{B^2}{2} dV
    ==============
    energy = sum(magnetic .dot. magnetic) * dvol2

    magnetic.x(:,:,:) *= 0.70710678118654752_DR

    time.loop += 1
    time.t    += time.dt  !debugp time.loop, time.t, energy
  end do

end program main
